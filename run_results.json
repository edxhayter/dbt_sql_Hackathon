{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.17", "generated_at": "2024-10-07T13:11:17.609920Z", "invocation_id": "cba3ee52-d719-4b6a-aa19-7df0e24e59f9", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.320880Z", "completed_at": "2024-10-07T13:11:17.338881Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.345874Z", "completed_at": "2024-10-07T13:11:17.345874Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04000735282897949, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_hackathon_linkedin.stg_linkedin__daily_followers_stats", "compiled": true, "compiled_code": "with source as (\n\n    select * from SQL_HACKATHON.LINKEDIN.time_bound_follower_statistic\n\n),\n\ntransformed as (\n\n    select \n\n        _fivetran_id as stats_id,\t\n        day\tas stats_day,\n        follower_gains_organic_follower_gain as organic_follower_gain,\t\n        follower_gains_paid_follower_gain as paid_follower_gain,\n        follower_gains_organic_follower_gain + follower_gains_paid_follower_gain as total_follower_gain,\n        replace(organization_entity, 'urn:li:organization:', '') as org_id\n\n    from source\n\n)\n\nselect * from transformed", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__daily_followers_stats"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.327983Z", "completed_at": "2024-10-07T13:11:17.340876Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.346906Z", "completed_at": "2024-10-07T13:11:17.346906Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04403114318847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_hackathon_linkedin.stg_linkedin__daily_post_stats", "compiled": true, "compiled_code": "with source as (\n\n    select * from SQL_HACKATHON.LINKEDIN.time_bound_share_statistic\n\n),\n\ntransformed as (\n\n    select\n\n        _fivetran_id as stats_id,\n        day as stats_day,\n        engagement,\n        unique_impressions_count,\n        share_count,\n        click_count,\n        like_count,\n        impression_count,\n        comment_count,\n        replace(organization_entity, 'urn:li:organization:', '') as org_id\n\n    from source\n\n)\n\nselect * from transformed", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__daily_post_stats"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.330986Z", "completed_at": "2024-10-07T13:11:17.341881Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.347875Z", "completed_at": "2024-10-07T13:11:17.347875Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04303407669067383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_hackathon_linkedin.stg_linkedin__org", "compiled": true, "compiled_code": "with source as (\n\n    select * from SQL_HACKATHON.LINKEDIN.organization \n\n),\n\ntransformed as (\n\n    select\n    \n        id as org_id,\n        founded_on_year as founded_year,\n        localized_description as org_desc,\n        localized_name as org_name,\n        localized_website as org_website\n    \n    from source\n\n)\n\nselect * from transformed", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__org"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.334876Z", "completed_at": "2024-10-07T13:11:17.343877Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.351919Z", "completed_at": "2024-10-07T13:11:17.351919Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04412698745727539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_hackathon_linkedin.stg_linkedin__org_posts", "compiled": true, "compiled_code": "with source as(\n\n        select * from SQL_HACKATHON.LINKEDIN.organization_ugc_post\n\n),\ntransformed as (\n\n    select\n\n        organization_id as org_id,\n        replace(ugc_post_id, 'urn:li:ugcPost:', '') as post_id\n    \n    from source\n\n)\n\nselect * from transformed", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__org_posts"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.368407Z", "completed_at": "2024-10-07T13:11:17.390271Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.395282Z", "completed_at": "2024-10-07T13:11:17.395282Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03840994834899902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_hackathon_linkedin.stg_linkedin__post_content", "compiled": true, "compiled_code": "with source as (\n\n        select * from SQL_HACKATHON.LINKEDIN.post_content\n\n),\n\ntransformed as (\n\n    select\n    \n        _fivetran_id as stats_id,\n        replace(post_id, 'urn:li:ugcPost:', '') as post_id,\n        type as post_type,\n        case \n            when contains(media_id, 'document') then 'document:'\n            when contains(media_id, 'video') then 'video:'\n            when contains(media_id, 'image') then 'image:'\n            else null\n        end as media_type,\n        replace(media_id, case \n            when contains(media_id, 'document') then 'urn:li:document:'\n            when contains(media_id, 'video') then 'urn:li:video:'\n            when contains(media_id, 'image') then 'urn:li:image:'\n            end\n            , '') as media_id,\n        media_title\n    \n    from source\n\n)\n\nselect * from transformed", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__post_content"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.372407Z", "completed_at": "2024-10-07T13:11:17.391286Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.396328Z", "completed_at": "2024-10-07T13:11:17.396328Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03829216957092285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_hackathon_linkedin.stg_linkedin__post_history", "compiled": true, "compiled_code": "with source as (\n\n    select * from SQL_HACKATHON.LINKEDIN.ugc_post_history\n\n),\n\ntransformed as (\n\n    select \n        replace(id, 'urn:li:ugcPost:', '') as post_id,\n        last_modified_time as post_modified_time,\n        SPLIT_PART(replace(author, 'urn:li:', ''), ':', 1) as author_type,\n        SPLIT_PART(replace(author, 'urn:li:', ''), ':', 2) as author_id,\n        commentary\tas post_text,\n        created_time as post_created_date,\n        first_published_at as initial_publish_date\n\n    from source\n\n    where \n        visibility = 'PUBLIC' and\n        distribution_feed_distribution = 'MAIN_FEED'\n\n)\n\nselect * from transformed", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__post_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.376405Z", "completed_at": "2024-10-07T13:11:17.392281Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.398289Z", "completed_at": "2024-10-07T13:11:17.398289Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04049992561340332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_hackathon_linkedin.stg_linkedin__post_shares", "compiled": true, "compiled_code": "with source as (\n\n    select * from SQL_HACKATHON.LINKEDIN.ugc_post_share_statistic\n\n),\n\ntransformed as (\n\n    select \n\n        share_statistic_id as share_statistic_id,\n        ugc_post_id as post_id\n    \n    from source\n)\n\nselect * from transformed", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__post_shares"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.380405Z", "completed_at": "2024-10-07T13:11:17.394388Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.402285Z", "completed_at": "2024-10-07T13:11:17.402285Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.041974544525146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sql_hackathon_linkedin.source_not_empty_string_linkedin_post_content__FIVETRAN_ID.d43e94e4bf", "compiled": true, "compiled_code": "\n\n    select _FIVETRAN_ID\n    from SQL_HACKATHON.LINKEDIN.post_content\n    where trim(_FIVETRAN_ID) = ''\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.421975Z", "completed_at": "2024-10-07T13:11:17.459209Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.463209Z", "completed_at": "2024-10-07T13:11:17.463209Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05530428886413574, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sql_hackathon_linkedin.source_not_null_linkedin_time_bound_share_statistic__fivetran_id.9974cac512", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom SQL_HACKATHON.LINKEDIN.time_bound_share_statistic\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.434884Z", "completed_at": "2024-10-07T13:11:17.459209Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.464198Z", "completed_at": "2024-10-07T13:11:17.464198Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.05775737762451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sql_hackathon_linkedin.source_unique_linkedin_time_bound_share_statistic__fivetran_id.234516741e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    _fivetran_id as unique_field,\n    count(*) as n_records\n\nfrom SQL_HACKATHON.LINKEDIN.time_bound_share_statistic\nwhere _fivetran_id is not null\ngroup by _fivetran_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.444176Z", "completed_at": "2024-10-07T13:11:17.461194Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.466725Z", "completed_at": "2024-10-07T13:11:17.466725Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.05685901641845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sql_hackathon_linkedin.dbt_utils_unique_combination_of_columns_stg_linkedin__daily_followers_stats_stats_id__stats_day.71fe6ff485", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        stats_id, stats_day\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__daily_followers_stats\n    group by stats_id, stats_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.456199Z", "completed_at": "2024-10-07T13:11:17.461194Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.467742Z", "completed_at": "2024-10-07T13:11:17.467742Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0538482666015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_hackathon_linkedin.int_linkedin__post_daily_performance", "compiled": true, "compiled_code": "-- import tables\n\nwith \n\nfollowers as (\n\n    select * from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__daily_followers_stats\n\n),\n\nstats as (\n\n    select * from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__daily_post_stats\n\n),\n\n-- Join the stats table to the follower stats table on the stat_id and the stat_day\n\nfinal as (\n\n    select \n        \n        stats.stats_id,\n        stats.org_id,\n        cast(stats.stats_day as date) as stats_date,\n        stats.engagement,\n        stats.unique_impressions_count,\n        stats.share_count,\n        stats.click_count,\n        stats.like_count,\n        stats.impression_count,\n        stats.comment_count,\n        \n        followers.organic_follower_gain,\n        followers.paid_follower_gain,\n        followers.total_follower_gain\n\n    from stats\n    join followers on stats.stats_id = followers.stats_id and\n        stats.stats_day = followers.stats_day\n\n)\n\nselect * from final", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.int_linkedin__post_daily_performance"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.477735Z", "completed_at": "2024-10-07T13:11:17.491736Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.500735Z", "completed_at": "2024-10-07T13:11:17.500735Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03098464012145996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sql_hackathon_linkedin.dbt_utils_unique_combination_of_columns_stg_linkedin__daily_post_stats_stats_id__stats_day.ccb1850ad6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        stats_id, stats_day\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__daily_post_stats\n    group by stats_id, stats_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.483740Z", "completed_at": "2024-10-07T13:11:17.497743Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.505511Z", "completed_at": "2024-10-07T13:11:17.505511Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03348350524902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sql_hackathon_linkedin.not_null_stg_linkedin__org_org_id.122306c105", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect org_id\nfrom TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__org\nwhere org_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.487741Z", "completed_at": "2024-10-07T13:11:17.499742Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.506221Z", "completed_at": "2024-10-07T13:11:17.506221Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.033524513244628906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sql_hackathon_linkedin.unique_stg_linkedin__org_org_id.f93f4a3ca9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    org_id as unique_field,\n    count(*) as n_records\n\nfrom TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__org\nwhere org_id is not null\ngroup by org_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.491736Z", "completed_at": "2024-10-07T13:11:17.501780Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.507278Z", "completed_at": "2024-10-07T13:11:17.507278Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0345005989074707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sql_hackathon_linkedin.dbt_utils_unique_combination_of_columns_stg_linkedin__org_posts_org_id__post_id.56822c656b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        org_id, post_id\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__org_posts\n    group by org_id, post_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.517235Z", "completed_at": "2024-10-07T13:11:17.533296Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.554280Z", "completed_at": "2024-10-07T13:11:17.554280Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.049042463302612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sql_hackathon_linkedin.dbt_utils_unique_combination_of_columns_stg_linkedin__post_content_stats_id__post_id.321a458e75", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        stats_id, post_id\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__post_content\n    group by stats_id, post_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.527208Z", "completed_at": "2024-10-07T13:11:17.551249Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.560289Z", "completed_at": "2024-10-07T13:11:17.560289Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.05039215087890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_hackathon_linkedin.int_linkedin__recent_post", "compiled": true, "compiled_code": "-- import ctes\nwith \n\nposts as (\n\n    select * from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__post_history\n    where author_type = 'organization'\n\n),\n\nfinal as (\n\n    select \n        \n        posts.post_id,\n        max(posts.post_modified_time) as recent_edit,\n        count(posts.post_modified_time) as num_edits,\n        posts.post_created_date,\n        posts.initial_publish_date\n    \n    from posts\n\n    group by posts.post_id, posts.post_created_date, posts.initial_publish_date\n\n)\n\nselect * from final", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.int_linkedin__recent_post"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.534286Z", "completed_at": "2024-10-07T13:11:17.552305Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.562529Z", "completed_at": "2024-10-07T13:11:17.562529Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.052826881408691406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sql_hackathon_linkedin.dbt_utils_unique_combination_of_columns_stg_linkedin__post_history_post_id__post_modified_time.51db301246", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        post_id, post_modified_time\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__post_history\n    group by post_id, post_modified_time\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.541287Z", "completed_at": "2024-10-07T13:11:17.556299Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.567044Z", "completed_at": "2024-10-07T13:11:17.567044Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.05292367935180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sql_hackathon_linkedin.dbt_utils_unique_combination_of_columns_stg_linkedin__post_shares_post_id__share_statistic_id.1224a1eec2", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        post_id, share_statistic_id\n    from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__post_shares\n    group by post_id, share_statistic_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.580868Z", "completed_at": "2024-10-07T13:11:17.593933Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.595893Z", "completed_at": "2024-10-07T13:11:17.595893Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02694416046142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_hackathon_linkedin.head_office__org_level_stats", "compiled": true, "compiled_code": "with \n\nstats as (\n\n    select * from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.int_linkedin__post_daily_performance\n\n),\n\norg as (\n\n    select * from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__org\n\n),\n\nfinal as (\n\n    select \n\n        org.org_name,\n\n        stats.stats_date,\n        sum(stats.click_count) as clicks,\n        sum(stats.comment_count) as comments,\n        sum(stats.impression_count) as impressions,\n        sum(stats.like_count) as likes,\n        sum(stats.share_count) as shares,\n        sum(stats.total_follower_gain) as new_followers\n\n    from stats\n    join org on stats.org_id = org.org_id\n\n    group by org.org_name, stats.stats_date\n    order by stats.stats_date asc\n\n)\n\nselect * from final", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.head_office__org_level_stats"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-07T13:11:17.588005Z", "completed_at": "2024-10-07T13:11:17.596891Z"}, {"name": "execute", "started_at": "2024-10-07T13:11:17.600955Z", "completed_at": "2024-10-07T13:11:17.600955Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024168014526367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sql_hackathon_linkedin.marketing__post_details", "compiled": true, "compiled_code": "-- import cte\nwith\n\nrecent_post as (\n\n    select * from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.int_linkedin__recent_post\n\n),\n\nposts as (\n\n    select * from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__post_history\n    where author_type = 'organization'\n\n),\n\ncontent as (\n\n    select * from TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.stg_linkedin__post_content\n\n),\n\nfinal as (\n\n    select\n\n        recent_post.*,\n\n        posts.post_text,\n\n        content.stats_id,\n        content.post_type,\n        content.media_type,\n        content.media_id,\n        content.media_title\n\n    from recent_post\n    inner join posts\n        on\n            recent_post.post_id = posts.post_id\n            and recent_post.recent_edit = posts.post_modified_time\n    inner join content on recent_post.post_id = content.post_id\n\n)\n\nselect * from final", "relation_name": "TIL_PORTFOLIO_PROJECTS.EH_SQL_HACKATHON.marketing__post_details"}], "elapsed_time": 1.1488709449768066, "args": {"quiet": false, "macro_debugging": false, "defer": false, "introspect": true, "enable_legacy_logger": false, "select": [], "log_level": "info", "populate_cache": true, "strict_mode": false, "require_explicit_package_overrides_for_builtin_materializations": false, "profiles_dir": "C:\\Users\\EdwardHayter\\.dbt", "printer_width": 80, "cache_selected_only": false, "partial_parse_file_diff": true, "log_level_file": "debug", "log_format": "default", "static": false, "log_file_max_bytes": 10485760, "version_check": true, "compile": true, "partial_parse": true, "use_colors_file": true, "use_colors": true, "show_resource_report": false, "send_anonymous_usage_stats": true, "which": "generate", "indirect_selection": "eager", "static_parser": true, "write_json": true, "log_path": "C:\\Users\\EdwardHayter\\Documents\\Virtual_Environments\\dbt_sql_Hackathon\\logs", "warn_error_options": {"include": [], "exclude": []}, "project_dir": "C:\\Users\\EdwardHayter\\Documents\\Virtual_Environments\\dbt_sql_Hackathon", "vars": {}, "empty_catalog": false, "exclude": [], "favor_state": false, "log_format_file": "debug", "print": true, "invocation_command": "dbt docs generate"}}